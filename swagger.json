{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet",
    "description": "Wallet documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://wallet-jet.vercel.app"
    },
    {
      "url": "http://localhost:3030"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Check current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout ",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Exit success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create a transaction",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Get user transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Number of pagination page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of transaction count in page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/categories": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get categories list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/statistic": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Get user statistics",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Statistics object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStatisticRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "o1@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123Qwerty"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "username"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGZkMmE2NWYyMGMzMjFmZTA1MDE0MiIsImlhdCI6MTY3MDM2OTk1OCwiZXhwIjoxNjcwNDUyNzU4fQ.YBlSuFQJUpJHobx66qYKY5CxwXmlaR1lLraAwdEfUkM"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "638fd2a65f20c321fe050142"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "username"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "o1@gmail.com"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 0
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "o1@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123Qwerty"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGZkMmE2NWYyMGMzMjFmZTA1MDE0MiIsImlhdCI6MTY3MDM3MjAwMSwiZXhwIjoxNjcwNDU0ODAxfQ.3BqDbysYPmjcUogxPH33Mse1tyB2FV8beys7DUyaz9s"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "username"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "o1@gmail.com"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 250
              }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "username"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "o1@gmail.com"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 250
              }
            }
          }
        }
      },
      "TransactionCreateRequest": {
        "type": "object",
        "required": ["date", "type", "sum", "category", "comment"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction date",
            "example": "13.12.2022"
          },
          "type": {
            "type": "Boolean",
            "description": "Transaction type",
            "example": false
          },
          "sum": {
            "type": "number",
            "description": "Transaction sum",
            "example": 150
          },
          "category": {
            "type": "string",
            "description": "Category name",
            "example": "Education"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "books"
          }
        }
      },
      "TransactionCreateResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction date",
            "example": "13.12.2022"
          },
          "type": {
            "type": "Boolean",
            "description": "Transaction type",
            "example": false
          },
          "sum": {
            "type": "number",
            "description": "Transaction sum",
            "example": 150
          },
          "category": {
            "type": "string",
            "description": "Category name",
            "example": "Education"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "books"
          },
          "year": {
            "type": "integer",
            "description": "Transaction year",
            "example": 2022
          },
          "month": {
            "type": "integer",
            "description": "Transaction month",
            "example": 12
          },
          "owner": {
            "type": "string",
            "description": "owner id",
            "example": "638fd2a65f20c321fe050142"
          },
          "balance": {
            "type": "number",
            "description": "User's balance after transaction",
            "example": 250
          }
        }
      },
      "TransactionsGetResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page",
            "example": "1"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages",
            "example": "25"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction id",
                  "example": "63988090ff594212e28d48a1"
                },
                "date": {
                  "type": "string",
                  "description": "Transaction date",
                  "example": "13.12.2022"
                },
                "month": {
                  "type": "integer",
                  "description": "Transaction month",
                  "example": 12
                },
                "year": {
                  "type": "integer",
                  "description": "Transaction year",
                  "example": "2022"
                },
                "type": {
                  "type": "Boolean",
                  "description": "Transaction type",
                  "example": false
                },
                "category": {
                  "type": "string",
                  "description": "Transaction category",
                  "example": "Education"
                },
                "comment": {
                  "type": "string",
                  "description": "User comment for transaction",
                  "example": "books "
                },
                "sum": {
                  "type": "number",
                  "description": "Transaction sum",
                  "example": 150
                },
                "balance": {
                  "type": "number",
                  "description": "User's balance",
                  "example": 250
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User id",
                      "example": "638fd2a65f20c321fe050142"
                    },
                    "name": {
                      "type": "string",
                      "description": "User name",
                      "example": "username"
                    },
                    "email": {
                      "type": "string",
                      "description": "User email",
                      "format": "email",
                      "example": "o1@gmail.com"
                    }
                  }
                }
              }
            },
            "example": [
              {
                "_id": "63988090ff594212e28d48a1",
                "date": "13.12.2022",
                "month": 12,
                "year": 2022,
                "type": false,
                "category": "Education",
                "comment": "books",
                "sum": 150,
                "balance": 250,
                "owner": {
                  "_id": "638fd2a65f20c321fe050142",
                  "name": "username",
                  "email": "o1@gmail.com"
                }
              },
              {
                "_id": "6398806fff594212e28d489c",
                "date": "13.12.2022",
                "month": 12,
                "year": 2022,
                "type": false,
                "category": "Household products",
                "comment": "washing powder",
                "sum": 348,
                "balance": 400,
                "owner": {
                  "_id": "638fd2a65f20c321fe050142",
                  "name": "username",
                  "email": "o1@gmail.com"
                }
              },
              {
                "_id": "63987fa7ff594212e28d4897",
                "date": "13.12.2022",
                "month": 12,
                "year": 2022,
                "type": true,
                "category": "Income",
                "comment": "my balance",
                "sum": 200,
                "balance": 748,
                "owner": {
                  "_id": "638fd2a65f20c321fe050142",
                  "name": "username",
                  "email": "o1@gmail.com"
                }
              },
              {
                "_id": "63987f35ff594212e28d4892",
                "date": "13.12.2022",
                "month": 12,
                "year": 2022,
                "type": false,
                "category": "Household products",
                "comment": "glue",
                "sum": 150.97,
                "balance": 548,
                "owner": {
                  "_id": "638fd2a65f20c321fe050142",
                  "name": "username",
                  "email": "o1@gmail.com"
                }
              },
              {
                "_id": "63987ef1ff594212e28d488d",
                "date": "13.12.2022",
                "month": 12,
                "year": 2022,
                "type": false,
                "category": "Car",
                "comment": "car wash",
                "sum": 450,
                "balance": 698.97,
                "owner": {
                  "_id": "638fd2a65f20c321fe050142",
                  "name": "username",
                  "email": "o1@gmail.com"
                }
              }
            ]
          }
        }
      },
      "CategoriesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Category id",
              "example": "5"
            },
            "name": {
              "type": "string",
              "description": "Category name",
              "example": "Child care"
            },
            "color": {
              "type": "string",
              "description": "Category color",
              "example": "#6E78E8"
            }
          }
        },
        "example": [
          { "id": "1", "name": "Main expenses", "color": "#FED057" },
          { "id": "2", "name": "Products", "color": "#FFD8D0" },
          { "id": "3", "name": "Car", "color": "#FD9498" },
          { "id": "4", "name": "Self care", "color": "#C5BAFF" },
          { "id": "5", "name": "Child care", "color": "#6E78E8" },
          { "id": "6", "name": "Household products", "color": "#4A56E2" },
          { "id": "7", "name": "Education", "color": "#81E1FF" },
          { "id": "8", "name": "Leisure", "color": "#24CCA7" },
          { "id": "9", "name": "Other expenses", "color": "#00AD84" },
          { "id": "10", "name": "Entertainment", "color": "#128f74" }
        ]
      },
      "GetStatisticRequest": {
        "type": "object",
        "required": ["month", "year"],
        "properties": {
          "month": {
            "type": "integer",
            "description": "Transaction month",
            "example": 12
          },
          "year": {
            "type": "integer",
            "description": "Transaction year",
            "example": 2022
          }
        }
      },
      "GetStatisticResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "owner id",
            "example": "638fd2a65f20c321fe050142"
          },
          "totalIncome": {
            "type": "number",
            "description": "Income for the month",
            "example": "3751"
          },
          "totalExpense": {
            "type": "number",
            "description": "Expense for the month ",
            "example": "3451"
          },
          "totalCategories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Category name",
                  "example": "Education"
                },
                "totalSum": {
                  "type": "number",
                  "description": "amount by category ",
                  "example": "900.45"
                }
              }
            },
            "example": [
              {
                "_id": "Education",
                "totalSum": 900.45
              },
              {
                "_id": "Leisure",
                "totalSum": 351.15
              },
              {
                "_id": "Child care",
                "totalSum": 699
              },
              {
                "_id": "Self care",
                "totalSum": 400.85
              },
              {
                "_id": "Household products",
                "totalSum": 649.55
              },
              {
                "_id": "Car",
                "totalSum": 450
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
